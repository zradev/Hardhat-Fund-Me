{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_Owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x16c7060c2b34208ed753caef171adaedbfecaf6e3c5d71ee921d1911543b2edb",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1033980",
    "logsBloom": "0x
    "blockHash": "0x93cb8d78dbb667e9747aa8833bbfafc9ba27ae45c17a13377c230fbe69e85406",
    "transactionHash": "0x16c7060c2b34208ed753caef171adaedbfecaf6e3c5d71ee921d1911543b2edb",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1033980",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "73d799c10a49798098ab7596066b3e6d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Zlatomir Radev\",\"details\":\"This implements a price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Pragma\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\n// Imports\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\n// Error Codes\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n// Interfaces, Libraries, Contracts\\r\\n\\r\\n/**\\r\\n * @title A contract for crowd funding\\r\\n * @author Zlatomir Radev\\r\\n * @notice This contract is to demo a simple funding contract\\r\\n * @dev This implements a price feeds as our library\\r\\n */\\r\\ncontract FundMe {\\r\\n    // Type Declarations\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    // State Variables\\r\\n    mapping(address => uint256) public s_addressToAmountFunded;\\r\\n    address[] public s_funders;\\r\\n\\r\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\r\\n    address public /* immutable */ i_Owner;\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n    \\r\\n    AggregatorV3Interface public s_priceFeed;\\r\\n\\r\\n    // Modifiers\\r\\n    modifier onlyOwner {\\r\\n        // require(msg.sender == owner);\\r\\n        if (msg.sender != i_Owner) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    // Functions\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_Owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n    \\r\\n    function fund() public payable {\\r\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n    }\\r\\n    \\r\\n\\r\\n    function withdraw() public payable onlyOwner{\\r\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\r\\n            address funder = s_funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public payable onlyOwner{\\r\\n        address[] memory funders = s_funders;\\r\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\r\\n            address funder = funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        (bool success, ) = i_Owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x03636518004bd8de3c2dd2cd087f14bbb4ac19a9ed192545d6838384cfdd1333\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // we could maket this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x27e3f7de4b4dbf3c3d1cab9ee8eb6b732157476b7476939e3f2435b22540ec93\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001257380380620012578339818101604052810190620000379190620000d7565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600081519050620000d18162000142565b92915050565b600060208284031215620000f057620000ef6200013d565b5b60006200010084828501620000c0565b91505092915050565b600062000116826200011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014d8162000109565b81146200015957600080fd5b50565b6110eb806200016c6000396000f3fe60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461012f578063b60d42881461015a578063be2693f014610164578063e667b0bf1461016e5761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100f2575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a29190610bde565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610a43565b6101bf565b6040516100df9190610c39565b60405180910390f35b6100f06101d7565b005b3480156100fe57600080fd5b5061011960048036038101906101149190610a70565b610419565b6040516101269190610bc3565b60405180910390f35b34801561013b57600080fd5b50610144610458565b6040516101519190610c39565b60405180910390f35b610162610465565b005b61016c61059f565b005b34801561017a57600080fd5b50610183610831565b6040516101909190610bc3565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103095760006001828154811061028457610283610fa1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030190610efa565b915050610261565b50600067ffffffffffffffff81111561032557610324610fd0565b5b6040519080825280602002602001820160405280156103535781602001602082028036833780820191505090505b5060019080519060200190610369929190610933565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039090610bae565b60006040518083038185875af1925050503d80600081146103cd576040519150601f19603f3d011682016040523d82523d6000602084013e6103d2565b606091505b5050905080610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610bf9565b60405180910390fd5b50565b6001818154811061042957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006104a4600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085790919063ffffffff16565b10156104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90610c19565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105339190610c70565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610626576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106aa57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610660575b5050505050905060005b81518110156107345760008282815181106106d2576106d1610fa1565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072c90610efa565b9150506106b4565b50600067ffffffffffffffff8111156107505761074f610fd0565b5b60405190808252806020026020018201604052801561077e5781602001602082028036833780820191505090505b5060019080519060200190610794929190610933565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516107dd90610bae565b60006040518083038185875af1925050503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081f565b606091505b505090508061082d57600080fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061086383610893565b90506000670de0b6b3a7640000858361087c9190610e0e565b6108869190610cc6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108dc57600080fd5b505afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190610a9d565b5050509150506402540be4008161092b9190610cf7565b915050919050565b8280548282559060005260206000209081019282156109ac579160200282015b828111156109ab5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610953565b5b5090506109b991906109bd565b5090565b5b808211156109d65760008160009055506001016109be565b5090565b6000813590506109e981611059565b92915050565b6000815190506109fe81611070565b92915050565b600081359050610a1381611087565b92915050565b600081519050610a2881611087565b92915050565b600081519050610a3d8161109e565b92915050565b600060208284031215610a5957610a58610fff565b5b6000610a67848285016109da565b91505092915050565b600060208284031215610a8657610a85610fff565b5b6000610a9484828501610a04565b91505092915050565b600080600080600060a08688031215610ab957610ab8610fff565b5b6000610ac788828901610a2e565b9550506020610ad8888289016109ef565b9450506040610ae988828901610a19565b9350506060610afa88828901610a19565b9250506080610b0b88828901610a2e565b9150509295509295909350565b610b2181610e68565b82525050565b610b3081610ec4565b82525050565b6000610b43600b83610c5f565b9150610b4e82611004565b602082019050919050565b6000610b66601b83610c5f565b9150610b718261102d565b602082019050919050565b6000610b89600083610c54565b9150610b9482611056565b600082019050919050565b610ba881610ea4565b82525050565b6000610bb982610b7c565b9150819050919050565b6000602082019050610bd86000830184610b18565b92915050565b6000602082019050610bf36000830184610b27565b92915050565b60006020820190508181036000830152610c1281610b36565b9050919050565b60006020820190508181036000830152610c3281610b59565b9050919050565b6000602082019050610c4e6000830184610b9f565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610c7b82610ea4565b9150610c8683610ea4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cbb57610cba610f43565b5b828201905092915050565b6000610cd182610ea4565b9150610cdc83610ea4565b925082610cec57610ceb610f72565b5b828204905092915050565b6000610d0282610e7a565b9150610d0d83610e7a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4c57610d4b610f43565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d8957610d88610f43565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dc657610dc5610f43565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e0357610e02610f43565b5b828202905092915050565b6000610e1982610ea4565b9150610e2483610ea4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5d57610e5c610f43565b5b828202905092915050565b6000610e7382610e84565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ecf82610ed6565b9050919050565b6000610ee182610ee8565b9050919050565b6000610ef382610e84565b9050919050565b6000610f0582610ea4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3857610f37610f43565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b61106281610e68565b811461106d57600080fd5b50565b61107981610e7a565b811461108457600080fd5b50565b61109081610ea4565b811461109b57600080fd5b50565b6110a781610eae565b81146110b257600080fd5b5056fea2646970667358221220fdaee68dcdd3b4911c91b382f78ece72cef32711c037ca42e7bc2a1804e4237c64736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461012f578063b60d42881461015a578063be2693f014610164578063e667b0bf1461016e5761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100f2575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a29190610bde565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610a43565b6101bf565b6040516100df9190610c39565b60405180910390f35b6100f06101d7565b005b3480156100fe57600080fd5b5061011960048036038101906101149190610a70565b610419565b6040516101269190610bc3565b60405180910390f35b34801561013b57600080fd5b50610144610458565b6040516101519190610c39565b60405180910390f35b610162610465565b005b61016c61059f565b005b34801561017a57600080fd5b50610183610831565b6040516101909190610bc3565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103095760006001828154811061028457610283610fa1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030190610efa565b915050610261565b50600067ffffffffffffffff81111561032557610324610fd0565b5b6040519080825280602002602001820160405280156103535781602001602082028036833780820191505090505b5060019080519060200190610369929190610933565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039090610bae565b60006040518083038185875af1925050503d80600081146103cd576040519150601f19603f3d011682016040523d82523d6000602084013e6103d2565b606091505b5050905080610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610bf9565b60405180910390fd5b50565b6001818154811061042957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006104a4600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085790919063ffffffff16565b10156104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90610c19565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105339190610c70565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610626576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106aa57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610660575b5050505050905060005b81518110156107345760008282815181106106d2576106d1610fa1565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072c90610efa565b9150506106b4565b50600067ffffffffffffffff8111156107505761074f610fd0565b5b60405190808252806020026020018201604052801561077e5781602001602082028036833780820191505090505b5060019080519060200190610794929190610933565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516107dd90610bae565b60006040518083038185875af1925050503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081f565b606091505b505090508061082d57600080fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061086383610893565b90506000670de0b6b3a7640000858361087c9190610e0e565b6108869190610cc6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108dc57600080fd5b505afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190610a9d565b5050509150506402540be4008161092b9190610cf7565b915050919050565b8280548282559060005260206000209081019282156109ac579160200282015b828111156109ab5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610953565b5b5090506109b991906109bd565b5090565b5b808211156109d65760008160009055506001016109be565b5090565b6000813590506109e981611059565b92915050565b6000815190506109fe81611070565b92915050565b600081359050610a1381611087565b92915050565b600081519050610a2881611087565b92915050565b600081519050610a3d8161109e565b92915050565b600060208284031215610a5957610a58610fff565b5b6000610a67848285016109da565b91505092915050565b600060208284031215610a8657610a85610fff565b5b6000610a9484828501610a04565b91505092915050565b600080600080600060a08688031215610ab957610ab8610fff565b5b6000610ac788828901610a2e565b9550506020610ad8888289016109ef565b9450506040610ae988828901610a19565b9350506060610afa88828901610a19565b9250506080610b0b88828901610a2e565b9150509295509295909350565b610b2181610e68565b82525050565b610b3081610ec4565b82525050565b6000610b43600b83610c5f565b9150610b4e82611004565b602082019050919050565b6000610b66601b83610c5f565b9150610b718261102d565b602082019050919050565b6000610b89600083610c54565b9150610b9482611056565b600082019050919050565b610ba881610ea4565b82525050565b6000610bb982610b7c565b9150819050919050565b6000602082019050610bd86000830184610b18565b92915050565b6000602082019050610bf36000830184610b27565b92915050565b60006020820190508181036000830152610c1281610b36565b9050919050565b60006020820190508181036000830152610c3281610b59565b9050919050565b6000602082019050610c4e6000830184610b9f565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610c7b82610ea4565b9150610c8683610ea4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cbb57610cba610f43565b5b828201905092915050565b6000610cd182610ea4565b9150610cdc83610ea4565b925082610cec57610ceb610f72565b5b828204905092915050565b6000610d0282610e7a565b9150610d0d83610e7a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4c57610d4b610f43565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d8957610d88610f43565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dc657610dc5610f43565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e0357610e02610f43565b5b828202905092915050565b6000610e1982610ea4565b9150610e2483610ea4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5d57610e5c610f43565b5b828202905092915050565b6000610e7382610e84565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ecf82610ed6565b9050919050565b6000610ee182610ee8565b9050919050565b6000610ef382610e84565b9050919050565b6000610f0582610ea4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3857610f37610f43565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b61106281610e68565b811461106d57600080fd5b50565b61107981610e7a565b811461108457600080fd5b50565b61109081610ea4565b811461109b57600080fd5b50565b6110a781610eae565b81146110b257600080fd5b5056fea2646970667358221220fdaee68dcdd3b4911c91b382f78ece72cef32711c037ca42e7bc2a1804e4237c64736f6c63430008070033",
  "devdoc": {
    "author": "Zlatomir Radev",
    "details": "This implements a price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a simple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_Owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}